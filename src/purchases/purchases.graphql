scalar Date

type Purchase {
  id: String!
  bookId: String!
  userId: String!
  bookPrice: Int!
  totalPrice: Int!
  quantity: Int!
  purchaseDate: Date!
}

input CreatePurchaseInput {
  bookId: String!
  userId: String!
  quantity: Int!
  purchaseDate: Date!
}

input UpdatePurchaseInput {
  id: String!
  quantity: Int
  purchaseDate: Date
}

type Query {
  getAllPurchases: [Purchase]!
  getPurchaseById(id: String!): Purchase
  getUserPurchases(userId: String!): [Purchase]!
  getBookPurchases(bookId: String!): [Purchase]!
}

type Mutation {
  createPurchase(createPurchaseInput: CreatePurchaseInput!): Purchase!
  updatePurchase(updatePurchaseInput: UpdatePurchaseInput!): String!
  removePurchase(id: String!): String!
}
